{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\r\n * @description Defines how to crop an asset\r\n * @extends Actions.Resize.ResizeAdvancedAction\r\n * @memberOf Actions.Resize\r\n * @see Visit {@link Actions.Resize| Resize} for examples\r\n */\n\nclass ResizeCropAction extends ResizeAdvancedAction {\n  /**\r\n   * @description Horizontal position for custom-coordinates based cropping.\r\n   * @param {number} x The x position.\r\n   */\n  x(x) {\n    this._actionModel.x = x;\n    return this.addQualifier(new Qualifier('x', x));\n  }\n  /**\r\n   * @description Vertical position for custom-coordinates based cropping\r\n   * @param {number} y The y position.\r\n   */\n\n\n  y(y) {\n    this._actionModel.y = y;\n    return this.addQualifier(new Qualifier('y', y));\n  }\n  /**\r\n   * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\r\n   * @param {number | string} z The zoom factor. (Default: 1.0)\r\n   */\n\n\n  zoom(z) {\n    this._actionModel.zoom = z;\n    return this.addQualifier(new Qualifier('z', z));\n  }\n\n  static fromJson(actionModel) {\n    const result = super.fromJson.apply(this, [actionModel]);\n    actionModel.x && result.x(actionModel.x);\n    actionModel.y && result.y(actionModel.y);\n    actionModel.zoom && result.zoom(actionModel.zoom);\n    return result;\n  }\n\n}\n\nexport { ResizeCropAction };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/actions/resize/ResizeCropAction.js"],"names":["Qualifier","ResizeAdvancedAction","ResizeCropAction","x","_actionModel","addQualifier","y","zoom","z","fromJson","actionModel","result","apply"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BD,oBAA/B,CAAoD;AAChD;AACJ;AACA;AACA;AACIE,EAAAA,CAAC,CAACA,CAAD,EAAI;AACD,SAAKC,YAAL,CAAkBD,CAAlB,GAAsBA,CAAtB;AACA,WAAO,KAAKE,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmBG,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,CAAC,CAACA,CAAD,EAAI;AACD,SAAKF,YAAL,CAAkBE,CAAlB,GAAsBA,CAAtB;AACA,WAAO,KAAKD,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmBM,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,IAAI,CAACC,CAAD,EAAI;AACJ,SAAKJ,YAAL,CAAkBG,IAAlB,GAAyBC,CAAzB;AACA,WAAO,KAAKH,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmBQ,CAAnB,CAAlB,CAAP;AACH;;AACc,SAARC,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAMC,MAAM,GAAG,MAAMF,QAAN,CAAeG,KAAf,CAAqB,IAArB,EAA2B,CAACF,WAAD,CAA3B,CAAf;AACAA,IAAAA,WAAW,CAACP,CAAZ,IAAiBQ,MAAM,CAACR,CAAP,CAASO,WAAW,CAACP,CAArB,CAAjB;AACAO,IAAAA,WAAW,CAACJ,CAAZ,IAAiBK,MAAM,CAACL,CAAP,CAASI,WAAW,CAACJ,CAArB,CAAjB;AACAI,IAAAA,WAAW,CAACH,IAAZ,IAAoBI,MAAM,CAACJ,IAAP,CAAYG,WAAW,CAACH,IAAxB,CAApB;AACA,WAAOI,MAAP;AACH;;AA/B+C;;AAiCpD,SAAST,gBAAT","sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\r\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\r\n/**\r\n * @description Defines how to crop an asset\r\n * @extends Actions.Resize.ResizeAdvancedAction\r\n * @memberOf Actions.Resize\r\n * @see Visit {@link Actions.Resize| Resize} for examples\r\n */\r\nclass ResizeCropAction extends ResizeAdvancedAction {\r\n    /**\r\n     * @description Horizontal position for custom-coordinates based cropping.\r\n     * @param {number} x The x position.\r\n     */\r\n    x(x) {\r\n        this._actionModel.x = x;\r\n        return this.addQualifier(new Qualifier('x', x));\r\n    }\r\n    /**\r\n     * @description Vertical position for custom-coordinates based cropping\r\n     * @param {number} y The y position.\r\n     */\r\n    y(y) {\r\n        this._actionModel.y = y;\r\n        return this.addQualifier(new Qualifier('y', y));\r\n    }\r\n    /**\r\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\r\n     * @param {number | string} z The zoom factor. (Default: 1.0)\r\n     */\r\n    zoom(z) {\r\n        this._actionModel.zoom = z;\r\n        return this.addQualifier(new Qualifier('z', z));\r\n    }\r\n    static fromJson(actionModel) {\r\n        const result = super.fromJson.apply(this, [actionModel]);\r\n        actionModel.x && result.x(actionModel.x);\r\n        actionModel.y && result.y(actionModel.y);\r\n        actionModel.zoom && result.zoom(actionModel.zoom);\r\n        return result;\r\n    }\r\n}\r\nexport { ResizeCropAction };\r\n"]},"metadata":{},"sourceType":"module"}