{"ast":null,"code":"/**\r\n * @description Contains functions to select the mode when using a progressive format.\r\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\r\n * @memberOf Qualifiers\r\n * @namespace Progressive\r\n * @example\r\n * import {Cloudinary} from \"@cloudinary/url-gen\";\r\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\r\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\r\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\r\n *\r\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\r\n * const image = yourCldInstance.image('woman');\r\n * image.delivery(format(jpg()).progressive(steep()))\r\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n\nclass ProgressiveQualifier extends FlagQualifier {\n  constructor(mode) {\n    super('progressive', mode);\n  }\n\n}\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\n\n\nfunction none() {\n  return new ProgressiveQualifier('none');\n}\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\n\n\nfunction semi() {\n  return new ProgressiveQualifier('semi');\n}\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\n\n\nfunction steep() {\n  return new ProgressiveQualifier('steep');\n}\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\n\n\nfunction progressive() {\n  return new ProgressiveQualifier();\n}\n\nconst Progressive = {\n  semi,\n  none,\n  steep,\n  progressive,\n  ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/fashion/node_modules/@cloudinary/url-gen/qualifiers/progressive.js"],"names":["FlagQualifier","ProgressiveQualifier","constructor","mode","none","semi","steep","progressive","Progressive"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,yBAA9B;;AACA,MAAMC,oBAAN,SAAmCD,aAAnC,CAAiD;AAC7CE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAM,aAAN,EAAqBA,IAArB;AACH;;AAH4C;AAKjD;AACA;AACA;;;AACA,SAASC,IAAT,GAAgB;AACZ,SAAO,IAAIH,oBAAJ,CAAyB,MAAzB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASI,IAAT,GAAgB;AACZ,SAAO,IAAIJ,oBAAJ,CAAyB,MAAzB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASK,KAAT,GAAiB;AACb,SAAO,IAAIL,oBAAJ,CAAyB,OAAzB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASM,WAAT,GAAuB;AACnB,SAAO,IAAIN,oBAAJ,EAAP;AACH;;AACD,MAAMO,WAAW,GAAG;AAChBH,EAAAA,IADgB;AAEhBD,EAAAA,IAFgB;AAGhBE,EAAAA,KAHgB;AAIhBC,EAAAA,WAJgB;AAKhBN,EAAAA;AALgB,CAApB;AAOA,SAASO,WAAT,EAAsBH,IAAtB,EAA4BD,IAA5B,EAAkCE,KAAlC,EAAyCC,WAAzC,EAAsDN,oBAAtD","sourcesContent":["/**\r\n * @description Contains functions to select the mode when using a progressive format.\r\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\r\n * @memberOf Qualifiers\r\n * @namespace Progressive\r\n * @example\r\n * import {Cloudinary} from \"@cloudinary/url-gen\";\r\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\r\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\r\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\r\n *\r\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\r\n * const image = yourCldInstance.image('woman');\r\n * image.delivery(format(jpg()).progressive(steep()))\r\n */\r\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\r\nclass ProgressiveQualifier extends FlagQualifier {\r\n    constructor(mode) {\r\n        super('progressive', mode);\r\n    }\r\n}\r\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\r\nfunction none() {\r\n    return new ProgressiveQualifier('none');\r\n}\r\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\r\nfunction semi() {\r\n    return new ProgressiveQualifier('semi');\r\n}\r\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\r\nfunction steep() {\r\n    return new ProgressiveQualifier('steep');\r\n}\r\n/**\r\n * @memberOf Qualifiers.Progressive\r\n */\r\nfunction progressive() {\r\n    return new ProgressiveQualifier();\r\n}\r\nconst Progressive = {\r\n    semi,\r\n    none,\r\n    steep,\r\n    progressive,\r\n    ProgressiveQualifier\r\n};\r\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\r\n"]},"metadata":{},"sourceType":"module"}