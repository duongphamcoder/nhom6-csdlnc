{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\r\n * @description Simulates the way an image would appear to someone with the specified color blind condition\r\n * @extends SDK.Action\r\n * @memberOf Actions.Effect\r\n * @see Visit {@link Actions.Effect|Effect} for an example\r\n */\n\nclass SimulateColorBlindEffectAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = 'simulateColorblind';\n    this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n  }\n\n  setQualifier(val) {\n    const strToAppend = `:${val}`;\n\n    if (val) {\n      this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n    }\n\n    return this;\n  }\n  /**\r\n   * @description Sets the color blind condition to simulate.\r\n   * @param {Qualifiers.simulateColorBlindValues | SimulateColorBlindType | string} cond\r\n   * @return {this}\r\n   */\n\n\n  condition(cond) {\n    this._actionModel.condition = cond;\n    return this.setQualifier(cond);\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      condition\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n    condition && result.condition(condition);\n    return result;\n  }\n\n}\n\nexport { SimulateColorBlindEffectAction };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/actions/effect/SimulateColorBlind.js"],"names":["Action","Qualifier","SimulateColorBlindEffectAction","constructor","_actionModel","actionType","addQualifier","setQualifier","val","strToAppend","condition","cond","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,8BAAN,SAA6CF,MAA7C,CAAoD;AAChDG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKA,YAAL,CAAkBC,UAAlB,GAA+B,oBAA/B;AACA,SAAKC,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAoB,qBAApB,CAAlB;AACH;;AACDM,EAAAA,YAAY,CAACC,GAAD,EAAM;AACd,UAAMC,WAAW,GAAI,IAAGD,GAAI,EAA5B;;AACA,QAAIA,GAAJ,EAAS;AACL,WAAKF,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAoB,sBAAqBQ,WAAY,EAArD,CAAlB;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,SAAKP,YAAL,CAAkBM,SAAlB,GAA8BC,IAA9B;AACA,WAAO,KAAKJ,YAAL,CAAkBI,IAAlB,CAAP;AACH;;AACc,SAARC,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAER,MAAAA,UAAF;AAAcK,MAAAA;AAAd,QAA4BG,WAAlC,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;AACAJ,IAAAA,SAAS,IAAII,MAAM,CAACJ,SAAP,CAAiBA,SAAjB,CAAb;AACA,WAAOI,MAAP;AACH;;AA9B+C;;AAgCpD,SAASZ,8BAAT","sourcesContent":["import { Action } from \"../../internal/Action.js\";\r\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\r\n/**\r\n * @description Simulates the way an image would appear to someone with the specified color blind condition\r\n * @extends SDK.Action\r\n * @memberOf Actions.Effect\r\n * @see Visit {@link Actions.Effect|Effect} for an example\r\n */\r\nclass SimulateColorBlindEffectAction extends Action {\r\n    constructor() {\r\n        super();\r\n        this._actionModel = {};\r\n        this._actionModel.actionType = 'simulateColorblind';\r\n        this.addQualifier(new Qualifier('e', `simulate_colorblind`));\r\n    }\r\n    setQualifier(val) {\r\n        const strToAppend = `:${val}`;\r\n        if (val) {\r\n            this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the color blind condition to simulate.\r\n     * @param {Qualifiers.simulateColorBlindValues | SimulateColorBlindType | string} cond\r\n     * @return {this}\r\n     */\r\n    condition(cond) {\r\n        this._actionModel.condition = cond;\r\n        return this.setQualifier(cond);\r\n    }\r\n    static fromJson(actionModel) {\r\n        const { actionType, condition } = actionModel;\r\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\r\n        // This allows the inheriting classes to determine the class to be created\r\n        const result = new this();\r\n        condition && result.condition(condition);\r\n        return result;\r\n    }\r\n}\r\nexport { SimulateColorBlindEffectAction };\r\n"]},"metadata":{},"sourceType":"module"}