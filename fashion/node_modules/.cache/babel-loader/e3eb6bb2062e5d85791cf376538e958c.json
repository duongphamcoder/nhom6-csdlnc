{"ast":null,"code":"import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { Transformation } from \"../transformation/Transformation.js\";\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\n/**\r\n * @desc Cloudinary media asset, with all possible transformations\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\n\nclass CloudinaryMedia extends CloudinaryTransformable {\n  constructor(publicID, cloudConfig, urlConfig) {\n    /* istanbul ignore next */\n    super(publicID, cloudConfig, urlConfig, new Transformation());\n  }\n  /**\r\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n   * @param {Actions.Transcode} action\r\n   * @return {this}\r\n   */\n\n\n  transcode(action) {\n    this.transformation.transcode(action);\n    return this;\n  }\n  /**\r\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n   * @param {Actions.VideoEdit} action\r\n   * @return {this}\r\n   */\n\n\n  videoEdit(action) {\n    this.transformation.videoEdit(action);\n    return this;\n  }\n  /**\r\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n   * @return {this}\r\n   */\n\n\n  underlay(underlayAction) {\n    this.transformation.underlay(underlayAction);\n    return this;\n  }\n\n  clone() {\n    return cloneDeep(this);\n  }\n\n}\n\nexport { CloudinaryMedia };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/fashion/node_modules/@cloudinary/url-gen/assets/CloudinaryMedia.js"],"names":["CloudinaryTransformable","Transformation","cloneDeep","CloudinaryMedia","constructor","publicID","cloudConfig","urlConfig","transcode","action","transformation","videoEdit","underlay","underlayAction","clone"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAN,SAA8BH,uBAA9B,CAAsD;AAClDI,EAAAA,WAAW,CAACC,QAAD,EAAWC,WAAX,EAAwBC,SAAxB,EAAmC;AAC1C;AACA,UAAMF,QAAN,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwC,IAAIN,cAAJ,EAAxC;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIO,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,SAAKC,cAAL,CAAoBF,SAApB,CAA8BC,MAA9B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,SAAS,CAACF,MAAD,EAAS;AACd,SAAKC,cAAL,CAAoBC,SAApB,CAA8BF,MAA9B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,QAAQ,CAACC,cAAD,EAAiB;AACrB,SAAKH,cAAL,CAAoBE,QAApB,CAA6BC,cAA7B;AACA,WAAO,IAAP;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,WAAOZ,SAAS,CAAC,IAAD,CAAhB;AACH;;AAjCiD;;AAmCtD,SAASC,eAAT","sourcesContent":["import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\r\nimport { Transformation } from \"../transformation/Transformation.js\";\r\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\r\n/**\r\n * @desc Cloudinary media asset, with all possible transformations\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryMedia extends CloudinaryTransformable {\r\n    constructor(publicID, cloudConfig, urlConfig) {\r\n        /* istanbul ignore next */\r\n        super(publicID, cloudConfig, urlConfig, new Transformation());\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Transcode} action\r\n     * @return {this}\r\n     */\r\n    transcode(action) {\r\n        this.transformation.transcode(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.VideoEdit} action\r\n     * @return {this}\r\n     */\r\n    videoEdit(action) {\r\n        this.transformation.videoEdit(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @return {this}\r\n     */\r\n    underlay(underlayAction) {\r\n        this.transformation.underlay(underlayAction);\r\n        return this;\r\n    }\r\n    clone() {\r\n        return cloneDeep(this);\r\n    }\r\n}\r\nexport { CloudinaryMedia };\r\n"]},"metadata":{},"sourceType":"module"}