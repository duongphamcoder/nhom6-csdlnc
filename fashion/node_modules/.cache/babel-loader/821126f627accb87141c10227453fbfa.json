{"ast":null,"code":"import { TextStyle } from \"../../qualifiers/textStyle.js\";\nimport { solid } from \"../../qualifiers/textStroke.js\";\n/**\r\n * Create TextStyle from ITextStyleModel\r\n * @param textStyleModel\r\n */\n\nexport function createTextStyleFromModel(textStyleModel) {\n  const {\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    fontAntialias,\n    fontHinting,\n    textDecoration,\n    textAlignment,\n    stroke,\n    letterSpacing,\n    lineSpacing\n  } = textStyleModel;\n  const result = new TextStyle(fontFamily, fontSize);\n\n  if (fontWeight) {\n    result.fontWeight(fontWeight);\n  }\n\n  if (fontStyle) {\n    result.fontStyle(fontStyle);\n  }\n\n  if (fontAntialias) {\n    result.fontAntialias(fontAntialias);\n  }\n\n  if (fontHinting) {\n    result.fontHinting(fontHinting);\n  }\n\n  if (textDecoration) {\n    result.textDecoration(textDecoration);\n  }\n\n  if (textAlignment) {\n    result.textAlignment(textAlignment);\n  }\n\n  if (stroke) {\n    result.stroke();\n\n    if (typeof stroke !== \"boolean\") {\n      result.stroke(solid(stroke.width, stroke.color));\n    }\n  }\n\n  if (letterSpacing) {\n    result.letterSpacing(letterSpacing);\n  }\n\n  if (lineSpacing) {\n    result.lineSpacing(lineSpacing);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/internal/models/createTextStyleFromModel.js"],"names":["TextStyle","solid","createTextStyleFromModel","textStyleModel","fontFamily","fontSize","fontWeight","fontStyle","fontAntialias","fontHinting","textDecoration","textAlignment","stroke","letterSpacing","lineSpacing","result","width","color"],"mappings":"AAAA,SAASA,SAAT,QAA0B,+BAA1B;AACA,SAASC,KAAT,QAAsB,gCAAtB;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,cAAlC,EAAkD;AACrD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,SAApC;AAA+CC,IAAAA,aAA/C;AAA8DC,IAAAA,WAA9D;AAA2EC,IAAAA,cAA3E;AAA2FC,IAAAA,aAA3F;AAA0GC,IAAAA,MAA1G;AAAkHC,IAAAA,aAAlH;AAAiIC,IAAAA;AAAjI,MAAkJX,cAAxJ;AACA,QAAMY,MAAM,GAAG,IAAIf,SAAJ,CAAcI,UAAd,EAA0BC,QAA1B,CAAf;;AACA,MAAIC,UAAJ,EAAgB;AACZS,IAAAA,MAAM,CAACT,UAAP,CAAkBA,UAAlB;AACH;;AACD,MAAIC,SAAJ,EAAe;AACXQ,IAAAA,MAAM,CAACR,SAAP,CAAiBA,SAAjB;AACH;;AACD,MAAIC,aAAJ,EAAmB;AACfO,IAAAA,MAAM,CAACP,aAAP,CAAqBA,aAArB;AACH;;AACD,MAAIC,WAAJ,EAAiB;AACbM,IAAAA,MAAM,CAACN,WAAP,CAAmBA,WAAnB;AACH;;AACD,MAAIC,cAAJ,EAAoB;AAChBK,IAAAA,MAAM,CAACL,cAAP,CAAsBA,cAAtB;AACH;;AACD,MAAIC,aAAJ,EAAmB;AACfI,IAAAA,MAAM,CAACJ,aAAP,CAAqBA,aAArB;AACH;;AACD,MAAIC,MAAJ,EAAY;AACRG,IAAAA,MAAM,CAACH,MAAP;;AACA,QAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;AAC7BG,MAAAA,MAAM,CAACH,MAAP,CAAcX,KAAK,CAACW,MAAM,CAACI,KAAR,EAAeJ,MAAM,CAACK,KAAtB,CAAnB;AACH;AACJ;;AACD,MAAIJ,aAAJ,EAAmB;AACfE,IAAAA,MAAM,CAACF,aAAP,CAAqBA,aAArB;AACH;;AACD,MAAIC,WAAJ,EAAiB;AACbC,IAAAA,MAAM,CAACD,WAAP,CAAmBA,WAAnB;AACH;;AACD,SAAOC,MAAP;AACH","sourcesContent":["import { TextStyle } from \"../../qualifiers/textStyle.js\";\r\nimport { solid } from \"../../qualifiers/textStroke.js\";\r\n/**\r\n * Create TextStyle from ITextStyleModel\r\n * @param textStyleModel\r\n */\r\nexport function createTextStyleFromModel(textStyleModel) {\r\n    const { fontFamily, fontSize, fontWeight, fontStyle, fontAntialias, fontHinting, textDecoration, textAlignment, stroke, letterSpacing, lineSpacing, } = textStyleModel;\r\n    const result = new TextStyle(fontFamily, fontSize);\r\n    if (fontWeight) {\r\n        result.fontWeight(fontWeight);\r\n    }\r\n    if (fontStyle) {\r\n        result.fontStyle(fontStyle);\r\n    }\r\n    if (fontAntialias) {\r\n        result.fontAntialias(fontAntialias);\r\n    }\r\n    if (fontHinting) {\r\n        result.fontHinting(fontHinting);\r\n    }\r\n    if (textDecoration) {\r\n        result.textDecoration(textDecoration);\r\n    }\r\n    if (textAlignment) {\r\n        result.textAlignment(textAlignment);\r\n    }\r\n    if (stroke) {\r\n        result.stroke();\r\n        if (typeof stroke !== \"boolean\") {\r\n            result.stroke(solid(stroke.width, stroke.color));\r\n        }\r\n    }\r\n    if (letterSpacing) {\r\n        result.letterSpacing(letterSpacing);\r\n    }\r\n    if (lineSpacing) {\r\n        result.lineSpacing(lineSpacing);\r\n    }\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}