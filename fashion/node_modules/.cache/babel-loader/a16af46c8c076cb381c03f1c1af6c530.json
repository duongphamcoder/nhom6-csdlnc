{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\r\n * @description Class for shortening a video to the specified range.\r\n * @extends SDK.Action\r\n * @memberOf Actions.VideoEdit\r\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\r\n */\n\nclass TrimAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {\n      actionType: 'trimVideo'\n    };\n  }\n  /**\r\n   *\r\n   * @description Support Percentages in values (30% -> 30p)\r\n   * @param {string|number} val\r\n   * @private\r\n   * @return {string}\r\n   */\n\n\n  parseVal(val) {\n    return typeof val === 'number' ? val : val.replace('%', 'p');\n  }\n  /**\r\n   * @description Sets the starting position of the part of the video to keep when trimming videos.\r\n   *\r\n   * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\r\n   *                           float representing the time in seconds or a string representing the percentage of the\r\n   *                           video length (for example, \"30%\" or \"30p\").\r\n   * @return {this}\r\n   */\n\n\n  startOffset(offset) {\n    this._actionModel.startOffset = +offset;\n    return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\n  }\n  /**\r\n   * @description Sets the end position of the part of the video to keep when trimming videos.\r\n   *\r\n   * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\r\n   *                         float representing the time in seconds or a string representing the percentage of the\r\n   *                         video length (for example, \"30%\" or \"30p\").\r\n   * @return {this}\r\n   */\n\n\n  endOffset(offset) {\n    this._actionModel.endOffset = +offset;\n    return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\n  }\n  /**\r\n   * @description Sets the duration of the video to keep.\r\n   *\r\n   * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\r\n   *                        representing the time in seconds or a string representing the percentage of the\r\n   *                        video length (for example, \"30%\" or \"30p\").\r\n   * @return {this}\r\n   */\n\n\n  duration(duration) {\n    this._actionModel.duration = duration;\n    return this.addQualifier(new Qualifier('du', this.parseVal(duration)));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      duration,\n      startOffset,\n      endOffset\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n\n    if (duration != null) {\n      result.duration(duration);\n    }\n\n    if (startOffset != null) {\n      result.startOffset(startOffset);\n    }\n\n    if (endOffset != null) {\n      result.endOffset(endOffset);\n    }\n\n    return result;\n  }\n\n}\n\nexport default TrimAction;","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/actions/videoEdit/TrimAction.js"],"names":["Action","Qualifier","TrimAction","constructor","_actionModel","actionType","parseVal","val","replace","startOffset","offset","addQualifier","endOffset","duration","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBF,MAAzB,CAAgC;AAC5BG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB;AAChBC,MAAAA,UAAU,EAAE;AADI,KAApB;AAGH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACV,WAAO,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAvC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKN,YAAL,CAAkBK,WAAlB,GAAgC,CAACC,MAAjC;AACA,WAAO,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcI,MAAd,CAApB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,SAAS,CAACF,MAAD,EAAS;AACd,SAAKN,YAAL,CAAkBQ,SAAlB,GAA8B,CAACF,MAA/B;AACA,WAAO,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcI,MAAd,CAApB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIG,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,SAAKT,YAAL,CAAkBS,QAAlB,GAA6BA,QAA7B;AACA,WAAO,KAAKF,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcO,QAAd,CAApB,CAAlB,CAAP;AACH;;AACc,SAARC,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAEF,MAAAA,QAAF;AAAYJ,MAAAA,WAAZ;AAAyBG,MAAAA;AAAzB,QAAuCG,WAA7C,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;;AACA,QAAIH,QAAQ,IAAI,IAAhB,EAAsB;AAClBG,MAAAA,MAAM,CAACH,QAAP,CAAgBA,QAAhB;AACH;;AACD,QAAIJ,WAAW,IAAI,IAAnB,EAAyB;AACrBO,MAAAA,MAAM,CAACP,WAAP,CAAmBA,WAAnB;AACH;;AACD,QAAIG,SAAS,IAAI,IAAjB,EAAuB;AACnBI,MAAAA,MAAM,CAACJ,SAAP,CAAiBA,SAAjB;AACH;;AACD,WAAOI,MAAP;AACH;;AApE2B;;AAsEhC,eAAed,UAAf","sourcesContent":["import { Action } from \"../../internal/Action.js\";\r\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\r\n/**\r\n * @description Class for shortening a video to the specified range.\r\n * @extends SDK.Action\r\n * @memberOf Actions.VideoEdit\r\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\r\n */\r\nclass TrimAction extends Action {\r\n    constructor() {\r\n        super();\r\n        this._actionModel = {\r\n            actionType: 'trimVideo'\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @description Support Percentages in values (30% -> 30p)\r\n     * @param {string|number} val\r\n     * @private\r\n     * @return {string}\r\n     */\r\n    parseVal(val) {\r\n        return typeof val === 'number' ? val : val.replace('%', 'p');\r\n    }\r\n    /**\r\n     * @description Sets the starting position of the part of the video to keep when trimming videos.\r\n     *\r\n     * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\r\n     *                           float representing the time in seconds or a string representing the percentage of the\r\n     *                           video length (for example, \"30%\" or \"30p\").\r\n     * @return {this}\r\n     */\r\n    startOffset(offset) {\r\n        this._actionModel.startOffset = +offset;\r\n        return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\r\n    }\r\n    /**\r\n     * @description Sets the end position of the part of the video to keep when trimming videos.\r\n     *\r\n     * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\r\n     *                         float representing the time in seconds or a string representing the percentage of the\r\n     *                         video length (for example, \"30%\" or \"30p\").\r\n     * @return {this}\r\n     */\r\n    endOffset(offset) {\r\n        this._actionModel.endOffset = +offset;\r\n        return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\r\n    }\r\n    /**\r\n     * @description Sets the duration of the video to keep.\r\n     *\r\n     * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\r\n     *                        representing the time in seconds or a string representing the percentage of the\r\n     *                        video length (for example, \"30%\" or \"30p\").\r\n     * @return {this}\r\n     */\r\n    duration(duration) {\r\n        this._actionModel.duration = duration;\r\n        return this.addQualifier(new Qualifier('du', this.parseVal(duration)));\r\n    }\r\n    static fromJson(actionModel) {\r\n        const { duration, startOffset, endOffset } = actionModel;\r\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\r\n        // This allows the inheriting classes to determine the class to be created\r\n        const result = new this();\r\n        if (duration != null) {\r\n            result.duration(duration);\r\n        }\r\n        if (startOffset != null) {\r\n            result.startOffset(startOffset);\r\n        }\r\n        if (endOffset != null) {\r\n            result.endOffset(endOffset);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default TrimAction;\r\n"]},"metadata":{},"sourceType":"module"}