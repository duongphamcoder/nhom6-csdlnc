{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\r\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\r\n * @extends SDK.Action\r\n * @memberOf {Actions.Effect}\r\n * @see Visit {@link Actions.Effect|Effect} for an example\r\n */\n\nclass ThemeEffect extends Action {\n  constructor(color) {\n    super();\n    this.effectName = 'theme';\n    this.color = color;\n  }\n  /**\r\n   * @description The sensitivity to photographic elements of an image.\r\n   *              A value of 0 treats the whole image as non-photographic.\r\n   *              A value of 200 treats the whole image as photographic, so no theme change is applied.\r\n   * @param {number} photosensitivity\r\n   * @return {this}\r\n   */\n\n\n  photosensitivity(photosensitivity) {\n    this._photosensitivity = photosensitivity;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : ''; // Replace # in hex colors (#fff -> fff)\n\n    const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n    this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n    return;\n  }\n\n}\n\nexport { ThemeEffect };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/fashion-web/node_modules/@cloudinary/url-gen/actions/effect/Theme.js"],"names":["Qualifier","QualifierValue","Action","ThemeEffect","constructor","color","effectName","photosensitivity","_photosensitivity","prepareQualifiers","sensitivity","val","replace","addQualifier"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BD,MAA1B,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,UAAL,GAAkB,OAAlB;AACA,SAAKD,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,gBAAgB,CAACA,gBAAD,EAAmB;AAC/B,SAAKC,iBAAL,GAAyBD,gBAAzB;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,KAAKF,iBAAL,GAA0B,qBAAoB,KAAKA,iBAAkB,EAArE,GAAyE,EAA7F,CADgB,CAEhB;;AACA,UAAMG,GAAG,GAAI,GAAE,KAAKL,UAAW,UAAS,KAAKD,KAAL,CAAWO,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAA4B,GAAEF,WAAY,EAAlF;AACA,SAAKG,YAAL,CAAkB,IAAIb,SAAJ,CAAc,GAAd,EAAmB,IAAIC,cAAJ,CAAmBU,GAAnB,CAAnB,CAAlB;AACA;AACH;;AAvB4B;;AAyBjC,SAASR,WAAT","sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\r\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\r\nimport { Action } from \"../../internal/Action.js\";\r\n/**\r\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\r\n * @extends SDK.Action\r\n * @memberOf {Actions.Effect}\r\n * @see Visit {@link Actions.Effect|Effect} for an example\r\n */\r\nclass ThemeEffect extends Action {\r\n    constructor(color) {\r\n        super();\r\n        this.effectName = 'theme';\r\n        this.color = color;\r\n    }\r\n    /**\r\n     * @description The sensitivity to photographic elements of an image.\r\n     *              A value of 0 treats the whole image as non-photographic.\r\n     *              A value of 200 treats the whole image as photographic, so no theme change is applied.\r\n     * @param {number} photosensitivity\r\n     * @return {this}\r\n     */\r\n    photosensitivity(photosensitivity) {\r\n        this._photosensitivity = photosensitivity;\r\n        return this;\r\n    }\r\n    prepareQualifiers() {\r\n        const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : '';\r\n        // Replace # in hex colors (#fff -> fff)\r\n        const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\r\n        this.addQualifier(new Qualifier('e', new QualifierValue(val)));\r\n        return;\r\n    }\r\n}\r\nexport { ThemeEffect };\r\n"]},"metadata":{},"sourceType":"module"}