{"ast":null,"code":"/**\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\nclass QualifierValue {\n  /**\r\n   *\r\n   * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\r\n   */\n  constructor(qualifierValue) {\n    this.values = [];\n    this.delimiter = ':'; // {value}{delimiter}{value}...\n\n    if (this.hasValue(qualifierValue)) {\n      this.addValue(qualifierValue);\n    }\n  }\n  /**\r\n   * @description Joins the provided values with the provided delimiter\r\n   */\n\n\n  toString() {\n    return this.values.join(this.delimiter);\n  }\n  /**\r\n   * @description Checks if the provided argument has a value\r\n   * @param {any} v\r\n   * @private\r\n   * @return {boolean}\r\n   */\n\n\n  hasValue(v) {\n    return typeof v !== 'undefined' && v !== null && v !== '';\n  }\n  /**\r\n   * @desc Adds a value for the this qualifier instance\r\n   * @param {any} value\r\n   * @return {this}\r\n   */\n\n\n  addValue(value) {\n    // Append value or array of values\n    if (Array.isArray(value)) {\n      this.values = this.values.concat(value);\n    } else {\n      this.values.push(value);\n    } // Remove falsy values\n\n\n    this.values = this.values.filter(v => this.hasValue(v));\n    return this;\n  }\n  /**\r\n   * @description Sets the delimiter for this instance\r\n   * @param delimiter\r\n   */\n\n\n  setDelimiter(delimiter) {\n    this.delimiter = delimiter;\n    return this;\n  }\n\n}\n\nexport { QualifierValue };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/internal/qualifier/QualifierValue.js"],"names":["QualifierValue","constructor","qualifierValue","values","delimiter","hasValue","addValue","toString","join","v","value","Array","isArray","concat","push","filter","setDelimiter"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,cAAN,CAAqB;AACjB;AACJ;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,SAAL,GAAiB,GAAjB,CAFwB,CAEF;;AACtB,QAAI,KAAKC,QAAL,CAAcH,cAAd,CAAJ,EAAmC;AAC/B,WAAKI,QAAL,CAAcJ,cAAd;AACH;AACJ;AACD;AACJ;AACA;;;AACIK,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKJ,MAAL,CAAYK,IAAZ,CAAiB,KAAKJ,SAAtB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACI,CAAD,EAAI;AACR,WAAO,OAAOA,CAAP,KAAa,WAAb,IAA4BA,CAAC,KAAK,IAAlC,IAA0CA,CAAC,KAAK,EAAvD;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIH,EAAAA,QAAQ,CAACI,KAAD,EAAQ;AACZ;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACtB,WAAKP,MAAL,GAAc,KAAKA,MAAL,CAAYU,MAAZ,CAAmBH,KAAnB,CAAd;AACH,KAFD,MAGK;AACD,WAAKP,MAAL,CAAYW,IAAZ,CAAiBJ,KAAjB;AACH,KAPW,CAQZ;;;AACA,SAAKP,MAAL,GAAc,KAAKA,MAAL,CAAYY,MAAZ,CAAoBN,CAAD,IAAO,KAAKJ,QAAL,CAAcI,CAAd,CAA1B,CAAd;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIO,EAAAA,YAAY,CAACZ,SAAD,EAAY;AACpB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAO,IAAP;AACH;;AAnDgB;;AAqDrB,SAASJ,cAAT","sourcesContent":["/**\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass QualifierValue {\r\n    /**\r\n     *\r\n     * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\r\n     */\r\n    constructor(qualifierValue) {\r\n        this.values = [];\r\n        this.delimiter = ':'; // {value}{delimiter}{value}...\r\n        if (this.hasValue(qualifierValue)) {\r\n            this.addValue(qualifierValue);\r\n        }\r\n    }\r\n    /**\r\n     * @description Joins the provided values with the provided delimiter\r\n     */\r\n    toString() {\r\n        return this.values.join(this.delimiter);\r\n    }\r\n    /**\r\n     * @description Checks if the provided argument has a value\r\n     * @param {any} v\r\n     * @private\r\n     * @return {boolean}\r\n     */\r\n    hasValue(v) {\r\n        return typeof v !== 'undefined' && v !== null && v !== '';\r\n    }\r\n    /**\r\n     * @desc Adds a value for the this qualifier instance\r\n     * @param {any} value\r\n     * @return {this}\r\n     */\r\n    addValue(value) {\r\n        // Append value or array of values\r\n        if (Array.isArray(value)) {\r\n            this.values = this.values.concat(value);\r\n        }\r\n        else {\r\n            this.values.push(value);\r\n        }\r\n        // Remove falsy values\r\n        this.values = this.values.filter((v) => this.hasValue(v));\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the delimiter for this instance\r\n     * @param delimiter\r\n     */\r\n    setDelimiter(delimiter) {\r\n        this.delimiter = delimiter;\r\n        return this;\r\n    }\r\n}\r\nexport { QualifierValue };\r\n"]},"metadata":{},"sourceType":"module"}