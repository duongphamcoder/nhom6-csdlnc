{"ast":null,"code":"import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\n\nclass URLConfig extends Config {\n  /**\r\n   * @param {IURLConfig} userURLConfig\r\n   */\n  constructor(userURLConfig) {\n    super();\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    Object.assign(this, {\n      secure: true\n    }, urlConfig);\n  }\n\n  extend(userURLConfig) {\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    return new URLConfig(Object.assign({}, this, urlConfig));\n  }\n  /**\r\n   * @param {string} value Sets the cname\r\n   */\n\n\n  setCname(value) {\n    this.cname = value;\n    return this;\n  }\n  /**\r\n   * @param {string} value Sets the secureDistribution\r\n   */\n\n\n  setSecureDistribution(value) {\n    this.secureDistribution = value;\n    return this;\n  }\n  /**\r\n   * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\r\n   */\n\n\n  setPrivateCdn(value) {\n    this.privateCdn = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether or not to sign the URL\r\n   */\n\n\n  setSignUrl(value) {\n    this.signUrl = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether or not to use a long signature\r\n   */\n\n\n  setLongUrlSignature(value) {\n    this.longUrlSignature = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether or not to shorten the URL\r\n   */\n\n\n  setShorten(value) {\n    this.shorten = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether or not to use a root path\r\n   */\n\n\n  setUseRootPath(value) {\n    this.useRootPath = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether or not to deliver the asset through https\r\n   */\n\n\n  setSecure(value) {\n    this.secure = value;\n    return this;\n  }\n  /**\r\n   * @param value Sets whether to force a version in the URL\r\n   */\n\n\n  setForceVersion(value) {\n    this.forceVersion = value;\n    return this;\n  }\n\n}\n\nexport default URLConfig;","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/config/URLConfig.js"],"names":["Config","ALLOWED_URL_CONFIG","URLConfig","constructor","userURLConfig","urlConfig","filterOutNonSupportedKeys","Object","assign","secure","extend","setCname","value","cname","setSecureDistribution","secureDistribution","setPrivateCdn","privateCdn","setSignUrl","signUrl","setLongUrlSignature","longUrlSignature","setShorten","shorten","setUseRootPath","useRootPath","setSecure","setForceVersion","forceVersion"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;;AACA,MAAMC,SAAN,SAAwBF,MAAxB,CAA+B;AAC3B;AACJ;AACA;AACIG,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACvB;AACA,UAAMC,SAAS,GAAG,KAAKC,yBAAL,CAA+BF,aAA/B,EAA8CH,kBAA9C,CAAlB;AACAM,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB;AAChBC,MAAAA,MAAM,EAAE;AADQ,KAApB,EAEGJ,SAFH;AAGH;;AACDK,EAAAA,MAAM,CAACN,aAAD,EAAgB;AAClB,UAAMC,SAAS,GAAG,KAAKC,yBAAL,CAA+BF,aAA/B,EAA8CH,kBAA9C,CAAlB;AACA,WAAO,IAAIC,SAAJ,CAAcK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAAwBH,SAAxB,CAAd,CAAP;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKC,KAAL,GAAaD,KAAb;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIE,EAAAA,qBAAqB,CAACF,KAAD,EAAQ;AACzB,SAAKG,kBAAL,GAA0BH,KAA1B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,aAAa,CAACJ,KAAD,EAAQ;AACjB,SAAKK,UAAL,GAAkBL,KAAlB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,UAAU,CAACN,KAAD,EAAQ;AACd,SAAKO,OAAL,GAAeP,KAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIQ,EAAAA,mBAAmB,CAACR,KAAD,EAAQ;AACvB,SAAKS,gBAAL,GAAwBT,KAAxB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIU,EAAAA,UAAU,CAACV,KAAD,EAAQ;AACd,SAAKW,OAAL,GAAeX,KAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIY,EAAAA,cAAc,CAACZ,KAAD,EAAQ;AAClB,SAAKa,WAAL,GAAmBb,KAAnB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIc,EAAAA,SAAS,CAACd,KAAD,EAAQ;AACb,SAAKH,MAAL,GAAcG,KAAd;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIe,EAAAA,eAAe,CAACf,KAAD,EAAQ;AACnB,SAAKgB,YAAL,GAAoBhB,KAApB;AACA,WAAO,IAAP;AACH;;AA7E0B;;AA+E/B,eAAeV,SAAf","sourcesContent":["import Config from \"./BaseConfig.js\";\r\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\r\nclass URLConfig extends Config {\r\n    /**\r\n     * @param {IURLConfig} userURLConfig\r\n     */\r\n    constructor(userURLConfig) {\r\n        super();\r\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\r\n        Object.assign(this, {\r\n            secure: true\r\n        }, urlConfig);\r\n    }\r\n    extend(userURLConfig) {\r\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\r\n        return new URLConfig(Object.assign({}, this, urlConfig));\r\n    }\r\n    /**\r\n     * @param {string} value Sets the cname\r\n     */\r\n    setCname(value) {\r\n        this.cname = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {string} value Sets the secureDistribution\r\n     */\r\n    setSecureDistribution(value) {\r\n        this.secureDistribution = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\r\n     */\r\n    setPrivateCdn(value) {\r\n        this.privateCdn = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to sign the URL\r\n     */\r\n    setSignUrl(value) {\r\n        this.signUrl = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to use a long signature\r\n     */\r\n    setLongUrlSignature(value) {\r\n        this.longUrlSignature = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to shorten the URL\r\n     */\r\n    setShorten(value) {\r\n        this.shorten = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to use a root path\r\n     */\r\n    setUseRootPath(value) {\r\n        this.useRootPath = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to deliver the asset through https\r\n     */\r\n    setSecure(value) {\r\n        this.secure = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether to force a version in the URL\r\n     */\r\n    setForceVersion(value) {\r\n        this.forceVersion = value;\r\n        return this;\r\n    }\r\n}\r\nexport default URLConfig;\r\n"]},"metadata":{},"sourceType":"module"}