{"ast":null,"code":"import { Position } from \"../../qualifiers/position.js\";\nimport { createGravityFromModel } from \"./createGravityFromModel.js\";\n/**\r\n * Create Position from given IPositionModel\r\n * @param position\r\n */\n\nexport function createPositionFromModel(position) {\n  const {\n    offsetX,\n    offsetY,\n    tiled,\n    allowOverflow,\n    gravity\n  } = position;\n  const result = new Position();\n\n  if (offsetX) {\n    result.offsetX(offsetX);\n  }\n\n  if (offsetY) {\n    result.offsetY(offsetY);\n  }\n\n  if (tiled) {\n    result.tiled();\n  }\n\n  if (allowOverflow != null) {\n    result.allowOverflow(allowOverflow);\n  }\n\n  if (gravity) {\n    result.gravity(createGravityFromModel(gravity));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/internal/models/createPositionFromModel.js"],"names":["Position","createGravityFromModel","createPositionFromModel","position","offsetX","offsetY","tiled","allowOverflow","gravity","result"],"mappings":"AAAA,SAASA,QAAT,QAAyB,8BAAzB;AACA,SAASC,sBAAT,QAAuC,6BAAvC;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAC9C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,aAA3B;AAA0CC,IAAAA;AAA1C,MAAsDL,QAA5D;AACA,QAAMM,MAAM,GAAG,IAAIT,QAAJ,EAAf;;AACA,MAAII,OAAJ,EAAa;AACTK,IAAAA,MAAM,CAACL,OAAP,CAAeA,OAAf;AACH;;AACD,MAAIC,OAAJ,EAAa;AACTI,IAAAA,MAAM,CAACJ,OAAP,CAAeA,OAAf;AACH;;AACD,MAAIC,KAAJ,EAAW;AACPG,IAAAA,MAAM,CAACH,KAAP;AACH;;AACD,MAAIC,aAAa,IAAI,IAArB,EAA2B;AACvBE,IAAAA,MAAM,CAACF,aAAP,CAAqBA,aAArB;AACH;;AACD,MAAIC,OAAJ,EAAa;AACTC,IAAAA,MAAM,CAACD,OAAP,CAAeP,sBAAsB,CAACO,OAAD,CAArC;AACH;;AACD,SAAOC,MAAP;AACH","sourcesContent":["import { Position } from \"../../qualifiers/position.js\";\r\nimport { createGravityFromModel } from \"./createGravityFromModel.js\";\r\n/**\r\n * Create Position from given IPositionModel\r\n * @param position\r\n */\r\nexport function createPositionFromModel(position) {\r\n    const { offsetX, offsetY, tiled, allowOverflow, gravity } = position;\r\n    const result = new Position();\r\n    if (offsetX) {\r\n        result.offsetX(offsetX);\r\n    }\r\n    if (offsetY) {\r\n        result.offsetY(offsetY);\r\n    }\r\n    if (tiled) {\r\n        result.tiled();\r\n    }\r\n    if (allowOverflow != null) {\r\n        result.allowOverflow(allowOverflow);\r\n    }\r\n    if (gravity) {\r\n        result.gravity(createGravityFromModel(gravity));\r\n    }\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}