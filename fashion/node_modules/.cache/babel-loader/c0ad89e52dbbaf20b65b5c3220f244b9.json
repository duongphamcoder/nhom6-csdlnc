{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\r\n * @description Represents a layer in a Photoshop document.\r\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\r\n * @extends SDK.Action\r\n * @memberOf Actions.PSDTools\r\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\r\n */\n\nclass GetLayerAction extends Action {\n  constructor() {\n    super();\n    this.qualifierValue = new QualifierValue();\n    this.qualifierValue.delimiter = ';';\n  }\n  /**\r\n   * @description deliver an image containing only specified layer of a Photoshop image from The layer index\r\n   * @param {string|number} from the index of the layer\r\n   */\n\n\n  byIndex(from) {\n    this.qualifierValue.addValue(from);\n    return this;\n  }\n  /**\r\n   * @description deliver an image containing only specified range of layers of a Photoshop image\r\n   * @param {string|number} from The layer number\r\n   * @param {string|number} to The layer number\r\n   */\n\n\n  byRange(from, to) {\n    const range = new QualifierValue(from);\n    range.addValue(to);\n    range.delimiter = '-';\n    this.qualifierValue.addValue(range);\n    return this;\n  }\n  /**\r\n   * @description deliver an image containing only specified layer by name of a Photoshop image\r\n   * @param {string|number} name The layer by name\r\n   */\n\n\n  byName(name) {\n    this.name = name;\n    this.qualifierValue.addValue(name);\n    return this;\n  }\n\n  prepareQualifiers() {\n    let qualifierValue = this.qualifierValue;\n\n    if (this.name) {\n      qualifierValue = new QualifierValue(['name', this.qualifierValue]).setDelimiter(':');\n    }\n\n    this.addQualifier(new Qualifier('pg', qualifierValue));\n    return this;\n  }\n\n}\n\nexport { GetLayerAction };","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/cloneGit/fashion-web/node_modules/@cloudinary/url-gen/actions/psdTools/GetLayerAction.js"],"names":["Action","Qualifier","QualifierValue","GetLayerAction","constructor","qualifierValue","delimiter","byIndex","from","addValue","byRange","to","range","byName","name","prepareQualifiers","setDelimiter","addQualifier"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BH,MAA7B,CAAoC;AAChCI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,cAAL,GAAsB,IAAIH,cAAJ,EAAtB;AACA,SAAKG,cAAL,CAAoBC,SAApB,GAAgC,GAAhC;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKH,cAAL,CAAoBI,QAApB,CAA6BD,IAA7B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,OAAO,CAACF,IAAD,EAAOG,EAAP,EAAW;AACd,UAAMC,KAAK,GAAG,IAAIV,cAAJ,CAAmBM,IAAnB,CAAd;AACAI,IAAAA,KAAK,CAACH,QAAN,CAAeE,EAAf;AACAC,IAAAA,KAAK,CAACN,SAAN,GAAkB,GAAlB;AACA,SAAKD,cAAL,CAAoBI,QAApB,CAA6BG,KAA7B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKT,cAAL,CAAoBI,QAApB,CAA6BK,IAA7B;AACA,WAAO,IAAP;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIV,cAAc,GAAG,KAAKA,cAA1B;;AACA,QAAI,KAAKS,IAAT,EAAe;AACXT,MAAAA,cAAc,GAAG,IAAIH,cAAJ,CAAmB,CAAC,MAAD,EAAS,KAAKG,cAAd,CAAnB,EAAkDW,YAAlD,CAA+D,GAA/D,CAAjB;AACH;;AACD,SAAKC,YAAL,CAAkB,IAAIhB,SAAJ,CAAc,IAAd,EAAoBI,cAApB,CAAlB;AACA,WAAO,IAAP;AACH;;AA1C+B;;AA4CpC,SAASF,cAAT","sourcesContent":["import { Action } from \"../../internal/Action.js\";\r\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\r\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\r\n/**\r\n * @description Represents a layer in a Photoshop document.\r\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\r\n * @extends SDK.Action\r\n * @memberOf Actions.PSDTools\r\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\r\n */\r\nclass GetLayerAction extends Action {\r\n    constructor() {\r\n        super();\r\n        this.qualifierValue = new QualifierValue();\r\n        this.qualifierValue.delimiter = ';';\r\n    }\r\n    /**\r\n     * @description deliver an image containing only specified layer of a Photoshop image from The layer index\r\n     * @param {string|number} from the index of the layer\r\n     */\r\n    byIndex(from) {\r\n        this.qualifierValue.addValue(from);\r\n        return this;\r\n    }\r\n    /**\r\n     * @description deliver an image containing only specified range of layers of a Photoshop image\r\n     * @param {string|number} from The layer number\r\n     * @param {string|number} to The layer number\r\n     */\r\n    byRange(from, to) {\r\n        const range = new QualifierValue(from);\r\n        range.addValue(to);\r\n        range.delimiter = '-';\r\n        this.qualifierValue.addValue(range);\r\n        return this;\r\n    }\r\n    /**\r\n     * @description deliver an image containing only specified layer by name of a Photoshop image\r\n     * @param {string|number} name The layer by name\r\n     */\r\n    byName(name) {\r\n        this.name = name;\r\n        this.qualifierValue.addValue(name);\r\n        return this;\r\n    }\r\n    prepareQualifiers() {\r\n        let qualifierValue = this.qualifierValue;\r\n        if (this.name) {\r\n            qualifierValue = new QualifierValue(['name', this.qualifierValue]).setDelimiter(':');\r\n        }\r\n        this.addQualifier(new Qualifier('pg', qualifierValue));\r\n        return this;\r\n    }\r\n}\r\nexport { GetLayerAction };\r\n"]},"metadata":{},"sourceType":"module"}