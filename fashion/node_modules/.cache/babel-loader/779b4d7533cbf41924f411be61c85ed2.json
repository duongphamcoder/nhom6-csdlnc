{"ast":null,"code":"import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\n\nclass FetchLayer extends Layer {\n  /**\r\n   * @class FetchLayer\r\n   * @classdesc Creates an image layer using a remote URL.\r\n   * @param {Object|string} options - layer parameters or a url\r\n   * @param {string} options.url the url of the image to fetch\r\n   */\n  constructor(options) {\n    super(options);\n\n    if (isString(options)) {\n      this.options.url = options;\n    } else if (options != null ? options.url : void 0) {\n      this.options.url = options.url;\n    }\n  }\n\n  url(url) {\n    this.options.url = url;\n    return this;\n  }\n  /**\r\n   * generate the string representation of the layer\r\n   * @function FetchLayer#toString\r\n   * @return {String}\r\n   */\n\n\n  toString() {\n    return `fetch:${base64Encode(this.options.url)}`;\n  }\n\n}\n\nexport default FetchLayer;","map":{"version":3,"sources":["C:/Users/Pham Tan Duong/Desktop/nhom6-csdlnc/fashion/node_modules/@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js"],"names":["Layer","isString","base64Encode","FetchLayer","constructor","options","url","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,YAAT,QAA6B,sCAA7B;;AACA,MAAMC,UAAN,SAAyBH,KAAzB,CAA+B;AAC3B;AACJ;AACA;AACA;AACA;AACA;AACII,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;;AACA,QAAIJ,QAAQ,CAACI,OAAD,CAAZ,EAAuB;AACnB,WAAKA,OAAL,CAAaC,GAAb,GAAmBD,OAAnB;AACH,KAFD,MAGK,IAAIA,OAAO,IAAI,IAAX,GAAkBA,OAAO,CAACC,GAA1B,GAAgC,KAAK,CAAzC,EAA4C;AAC7C,WAAKD,OAAL,CAAaC,GAAb,GAAmBD,OAAO,CAACC,GAA3B;AACH;AACJ;;AACDA,EAAAA,GAAG,CAACA,GAAD,EAAM;AACL,SAAKD,OAAL,CAAaC,GAAb,GAAmBA,GAAnB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,GAAG;AACP,WAAQ,SAAQL,YAAY,CAAC,KAAKG,OAAL,CAAaC,GAAd,CAAmB,EAA/C;AACH;;AA3B0B;;AA6B/B,eAAeH,UAAf","sourcesContent":["import Layer from './layer.js';\r\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\r\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\r\nclass FetchLayer extends Layer {\r\n    /**\r\n     * @class FetchLayer\r\n     * @classdesc Creates an image layer using a remote URL.\r\n     * @param {Object|string} options - layer parameters or a url\r\n     * @param {string} options.url the url of the image to fetch\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        if (isString(options)) {\r\n            this.options.url = options;\r\n        }\r\n        else if (options != null ? options.url : void 0) {\r\n            this.options.url = options.url;\r\n        }\r\n    }\r\n    url(url) {\r\n        this.options.url = url;\r\n        return this;\r\n    }\r\n    /**\r\n     * generate the string representation of the layer\r\n     * @function FetchLayer#toString\r\n     * @return {String}\r\n     */\r\n    toString() {\r\n        return `fetch:${base64Encode(this.options.url)}`;\r\n    }\r\n}\r\nexport default FetchLayer;\r\n"]},"metadata":{},"sourceType":"module"}